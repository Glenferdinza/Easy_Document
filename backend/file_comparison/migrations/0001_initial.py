# Generated by Django 5.2.5 on 2025-09-08 00:40

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ComparisonTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('file_types', models.JSONField(default=list)),
                ('comparison_settings', models.JSONField(default=dict)),
                ('ignore_patterns', models.JSONField(default=list)),
                ('is_default', models.BooleanField(default=False)),
                ('usage_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BatchComparison',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('source_folder1', models.CharField(max_length=500)),
                ('source_folder2', models.CharField(max_length=500)),
                ('total_files', models.IntegerField(default=0)),
                ('processed_files', models.IntegerField(default=0)),
                ('identical_files', models.IntegerField(default=0)),
                ('different_files', models.IntegerField(default=0)),
                ('error_files', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('results_summary', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('comparison_template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='file_comparison.comparisontemplate')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FileComparison',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('comparison_type', models.CharField(choices=[('text', 'Text Comparison'), ('binary', 'Binary Comparison'), ('image', 'Image Comparison'), ('pdf', 'PDF Comparison'), ('structure', 'Structure Comparison')], max_length=20)),
                ('file1', models.FileField(upload_to='comparisons/file1/')),
                ('file2', models.FileField(upload_to='comparisons/file2/')),
                ('comparison_result', models.JSONField(default=dict)),
                ('similarity_percentage', models.FloatField(default=0.0)),
                ('differences_count', models.IntegerField(default=0)),
                ('comparison_report', models.FileField(blank=True, upload_to='comparison_reports/')),
                ('processing_time', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ComparisonDifference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('difference_type', models.CharField(choices=[('added', 'Added Content'), ('removed', 'Removed Content'), ('modified', 'Modified Content'), ('moved', 'Moved Content')], max_length=20)),
                ('location', models.JSONField(default=dict)),
                ('old_content', models.TextField(blank=True)),
                ('new_content', models.TextField(blank=True)),
                ('context_before', models.TextField(blank=True)),
                ('context_after', models.TextField(blank=True)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=10)),
                ('comparison', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='differences', to='file_comparison.filecomparison')),
            ],
            options={
                'ordering': ['location'],
            },
        ),
        migrations.CreateModel(
            name='VersionComparison',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_name', models.CharField(max_length=200)),
                ('version1_file', models.FileField(upload_to='versions/v1/')),
                ('version2_file', models.FileField(upload_to='versions/v2/')),
                ('version1_number', models.CharField(max_length=50)),
                ('version2_number', models.CharField(max_length=50)),
                ('change_summary', models.JSONField(default=dict)),
                ('change_log', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
